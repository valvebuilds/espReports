// ----------------------------------------------------
// Herramienta de Gestión de Horas Extra y Compensatorios
// Autor: valerie álvarez
// Fecha: 2025-10-07
// ----------------------------------------------------

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ----------------------------------------------------
// ENUMS
// ----------------------------------------------------

enum Rol {
  COORDINADOR
  ADMIN
  USER
}

enum DiaSemana {
  LUNES
  MARTES
  MIERCOLES
  JUEVES
  VIERNES
  SABADO
  DOMINGO
}
// ----------------------------------------------------
// MODELOS BASE
// ----------------------------------------------------

model Usuario {
  id           Int       @id @default(autoincrement())
  nombre       String
  usuario      String    @unique
  contrasena   String
  rol          Rol      @default(USER)
  area         Area?
  creadoEn      DateTime  @default(now())
  actualizadoEn DateTime @updatedAt

}

model Area {
  id            Int         @id @default(autoincrement())
  nombre        String
  coordinadorId Int        @unique
  coordinador   Usuario    @relation(fields: [coordinadorId],  references: [id])
  empleados     Empleado[]
  turnoIds      Int[]     
  turnos        Turno[]     
  creadoEn      DateTime    @default(now())
  actualizadoEn DateTime    @updatedAt
}

model Empleado {
  id             Int             @id @default(autoincrement())
  nombre         String
  cedula         String          @unique
  areaId         Int             
  area           Area            @relation(fields: [areaId], references: [id])

  horasExtra     horaExtra[]  //registros de horas extra
  asignadosId     Int[]
  turnosAsignados Asignacion[]  //turnos asignados al empleado
        
  activo         Boolean         @default(true)
  creadoEn       DateTime        @default(now())
  actualizadoEn  DateTime        @updatedAt
}

///----------------------------------------------------
// TURNOS Y ASIGNACIONES
//----------------------------------------------------
model Turno {
id              Int    @id @default(autoincrement()) 
areaId          Int   
area            Area   @relation(fields: [areaId],references: [id], onDelete: Cascade)
nombre          String  @db.VarChar(100)
activo          Boolean @default(true)
fechaCreacion   DateTime  @default(now()) 
horarioIds      Int[]
horarios        Horario[]       
asignaciones    Asignacion[]
}

model Asignacion {
id              Int    @id @default(autoincrement())
empleadoId      Int            
empleado        Empleado          @relation(fields: [empleadoId], references: [id], onDelete: Cascade)    
turnoId         Int                
turno           Turno              @relation(fields: [turnoId], references: [id], onDelete: Restrict)
fechaInicio     DateTime           
fechaFin        DateTime?          // NULL si sigue asignado
fechaCreacion   DateTime           @default(now()) 
}
// ----------------------------------------------------
// HORARIOS Y FESTIVOS
// ----------------------------------------------------

model Horario {
  id              Int        @id @default(autoincrement())
  turnoId       Int         
  turno         Turno      @relation(fields: [turnoId], references: [id], onDelete: Cascade)
  
  diaSemana       DiaSemana
  horaInicio      DateTime
  horaFin         DateTime
  descansoInicio  DateTime?
  descansoFin     DateTime? 
  minutosDescanso  Int  @default(105)
  minutosLaborales Int @default(465)
  
  activo          Boolean    @default(true)
  creadoEn        DateTime   @default(now())
  actualizadoEn   DateTime   @updatedAt
            
}

model Festivo {
  id   Int      @id @default(autoincrement())
  fecha DateTime @unique
  nombre String
  verificado Boolean @default(false)
}


// ----------------------------------------------------
// REGISTRO DE HORAS EXTRA
// ----------------------------------------------------

model horaExtra {
  id              Int              @id @default(autoincrement())
  empleadoId      Int
  empleado        Empleado         @relation(fields: [empleadoId], references: [id])
  coordinadorId   Int

  horaInicio     DateTime
  horaFin        DateTime
  
  horasDiurnas      Float   @default(0)
  horasNocturnas    Float   @default(0)
  horasDominicales  Float   @default(0)
  totalHours        Float

  observaciones  String?
  nroSolicitud   String?
  
  estado          String // PENDIENTE | APROBADO | RECHAZADO

  creadoEn       DateTime           @default(now())
  actualizadoEn  DateTime           @updatedAt
}
